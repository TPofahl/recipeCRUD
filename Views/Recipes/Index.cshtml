@model IEnumerable<RecipeCRUD.Models.RecipeModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container body-content">

    @using (Html.BeginForm("SearchForName", "Recipes"))
    {
        @Html.AntiForgeryToken()

        <div class="search-container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="search-controls">
                <div class="searchbar">
                    <input type="text" name="searchPhrase" id="searchPhrase" class="form-control" style="width: 250px; margin-right: 5px;" />
                    <input type="submit" value="Search" class="btn btn-default" />
                </div>
                <div class="search-buttons">
                    <button class="btn btn-default" style="margin-right: 5px;">@Html.ActionLink("Reset", "Reset", new { @class = "recipe-container-text" })</button>
                    <button class="btn btn-default">@Html.ActionLink("Create New Recipe", "Create", new { @class = "recipe-container-text" })</button>
                </div>
            </div>
        </div>
    }

    <div class="recipe-section">
        <div class="recipe-area">
            <div class="recipe-grid">
                @{int i = 0;}
                @foreach (var item in Model)
                {
                    if (i != 0)
                    {
                        @:</div><div class="recipe-grid">
                    }

                    <div class="recipe-container col-xs-6 col-sm-4">
                        <img class="recipe-image" src="@Url.Content(item.Image)" width="312" height="231" />
                        <a class="recipe-container-text">@Html.DisplayFor(modelItem => item.Name)</a>
                        <div class="btn-container">
                            @if (item.IsFromApi)
                            {
                                <button class="btn-details">@Html.ActionLink("Details", "Details", new { id = item.Id, spoonacularId = item.SpoonacularId, isFromApi = item.IsFromApi }, new { @class = "recipe-container-text" })</button>
                            }
                            else
                            {
                                <button class="btn-details">@Html.ActionLink("Details", "Details", new { id = item.Id, spoonacularId = item.SpoonacularId, isFromApi = item.IsFromApi }, new { @class = "recipe-container-text" })</button>
                                <button class="btn-edit">@Html.ActionLink("Edit", "Edit", new { id = item.Id, spoonacularId = item.SpoonacularId, isFromApi = item.IsFromApi }, new { @class = "recipe-container-text" })</button>
                                <button class="btn-delete">@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "recipe-container-text" })</button>
                            }
                        </div>
                    </div>
                    i++;
                }
            </div>
        </div>
    </div>
</div>
