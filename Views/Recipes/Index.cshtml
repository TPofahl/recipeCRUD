@model IEnumerable<RecipeCRUD.Models.RecipeModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container body-content">

    @using (Html.BeginForm("SearchForName", "Recipes"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    <label for="searchPhrase">Search name</label>
                    <input type="text" name="searchPhrase" id="searchPhrase" class="form-control" />

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Search" class="btn btn-default" />
                </div>
                @Html.ActionLink("Reset", "Reset")
            </div>
        </div>
    }

    <h2>Recipes</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <div class="recipe-area">
        <div class="recipe-grid">
            @{int i = 0;}
            @foreach (var item in Model)
            {
                if (i > 0 && i % 2 == 0)
                {
                @:</div><div class="recipe-grid">
                }
                <div class="recipe-container col-xs-6 col-sm-4">
                    <img class="recipe-image" src="@Url.Content(item.Image)" width="312" height="231" />
                    <a class="recipe-container-text">@Html.DisplayFor(modelItem => item.Name)</a>
                    <div class="btn-container">
                        @if (item.IsFromApi)
                        {
                            <button class="btn-details">@Html.ActionLink("Details", "Details", new { id = item.Id, spoonacularId = item.SpoonacularId, isFromApi = item.IsFromApi }, new { @class = "recipe-container-text" })</button>
                        }
                        else
                        {
                            <button class="btn-details">@Html.ActionLink("Details", "Details", new { id = item.Id, spoonacularId = item.SpoonacularId, isFromApi = item.IsFromApi }, new { @class = "recipe-container-text" })</button>
                            <button class="btn-edit">@Html.ActionLink("Edit", "Edit", new { id = item.Id, spoonacularId = item.SpoonacularId, isFromApi = item.IsFromApi }, new { @class = "recipe-container-text" })</button>
                            <button class="btn-delete">@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "recipe-container-text" })</button>
                        }
                    </div>
                </div>
                i++;
            }
        </div>
    </div>
</div>
